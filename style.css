/* 
Color pallete. This section defines variables for the color pallete,
so that we can refer to particular colors by name instead of hexadecimal values.
This is applied to the 'root' psuedo-element, which just means that these color
variables are available to be used anywhere in our html document
*/
:root {
    --color1: #0D0A0B;
    --color2: #454955;
    --color3: #F3EFF5;
    --white-font: #FFFFFF;
    --black-font: #000000;
}

/* Defines the main container size, we are limiting to 1140px max and centring in the viewport */
.main-container {
    max-width: 72em;
    margin: 0 auto;
    font-family: Inter;
    color: var(--color3);
}

/* Here we define the aspects of style of our elements other than their grid layout */
.banner {
    background-color: var(--color1);
    min-height: 8em;
    padding: 1em;
}

.banner-title {
    font-size: 3em;
}

.banner-subtitle {
    font-size: 2em;
    padding-left: 0.125rem;
    padding-top: 0.25rem;
}

#intro {
    display: flex;
    flex-direction: column;
    background-color: #F3EFF5;
}

.part-text {
    background-color: #454955;
    font-size: 1em;
    padding: 1em;
}

.part-text-title {
    font-size: 1.5em;
}

.part-pic { 
    max-width: 100%;
}

.conclusion {
    background-color: var(--color3);
    color: var(--color2);
    font-size: 3em;
    text-align: center;
    padding: 1.5em;
}

.referencing-title {
        font-size: 0,75em;
        font-family: Inter;
        color: var(--color2);
}

.referencing-body {
    font-size: 0,5em;
    font-family: Inter;
    color: var(--color2);
}

/* .team-member-card {
    min-height: 32em;
    background-color: var(--color3);
    display: flex;
    flex-direction: column;
    border-radius: 1em;
    overflow: hidden;
}

.team-member-card-image {
    max-width: 100%;
}

.team-member-card-blurb {
    padding: 1em;
}

.our-clients-title {
    background-color: var(--color2);
    color: var(--color4);
    font-size: 3em;
    text-align: center;
    padding: 0.5em;
    border-radius: 1em;
}

.client-icon {
    width: 100%;
} */

/* now we create names for the grid areas for specific elements */
#banner {
    grid-area: ban1;
}

#intro {
    grid-area: intr;
}

#part-pic-1 {
    grid-area: pp1a;
}

#part-pic-2a {
    grid-area: pp2a;
}

#part-pic-2b {
    grid-area: pp2b;
}


#part-text-1 {
    grid-area: ptx1;
}

#part-text-2 {
    grid-area: ptx2;
}

#part-pic-3a {
    grid-area: pp3a;
}

#part-pic-3b {
    grid-area: pp3b;
}

#part-text-3 {
    grid-area: ptx3;
}
#part-pic-4a {
    grid-area: pp4a;
}

#part-pic-4b {
    grid-area: pp4b;
}

#part-text-4 {
    grid-area: ptx4;
}

#part-pic-5a {
    grid-area: pp5a;
}

#part-text-5 {
    grid-area: ptx5;
}

#part-pic-6a {
    grid-area: pp6a;
}

#part-text-6 {
    grid-area: ptx6;
}

#part-pic-7a {
    grid-area: pp7a;
}

#part-text-7 {
    grid-area: ptx7;
}

#conclusion {
    grid-area: cncl;
}

#referencing {
    grid-area: rfrn;
}


/* Use a flexible layout grid */
.main-container {
    display: grid;
    column-gap: 1em;
}
  
/* 
Responsive Layout breakpoints. We start 'mobile-first' i.e. we define how the layout should look
for the smallest screen sizes. In this case we want a single column that spans the main container.
Because this CSS definition comes first, it will apply by default. Then we override it below with 
media queries for progressively bigger screen widths
*/
.main-container {
    /* grid-template for phone */
}
    
@media (min-width: 50em) {
       .main-container {
        /* grid-template for table */
    }
}

@media (min-width: 75em) {
    .main-container {
        grid-template:
        "ban1 ban1 ban1 ban1 ban1 ban1 ban1 ban1 ban1 ban1 ban1 ban1" minmax(8em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(2em, auto)
        "intr intr intr intr intr intr intr intr intr intr intr intr" minmax(48em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(6em, auto)
        "pp1a pp1a pp1a pp1a pp1a pp1a ptx1 ptx1 ptx1 ptx1 ptx1 ptx1" minmax(20em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(6em, auto)
        "pp2a pp2a pp2a pp2b pp2b pp2b ptx2 ptx2 ptx2 ptx2 ptx2 ptx2" minmax(14em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(6em, auto)
        "pp3a pp3a pp3a pp3b pp3b pp3b ptx3 ptx3 ptx3 ptx3 ptx3 ptx3" minmax(12em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(6em, auto)
        "pp4a pp4a pp4a pp4b pp4b pp4b ptx4 ptx4 ptx4 ptx4 ptx4 ptx4" minmax(14em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(6em, auto)
        "pp5a pp5a pp5a pp5a pp5a pp5a ptx5 ptx5 ptx5 ptx5 ptx5 ptx5" minmax(16em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(4em, auto)
        "pp6a pp6a pp6a pp6a pp6a pp6a ptx6 ptx6 ptx6 ptx6 ptx6 ptx6" minmax(16em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(4em, auto)
        "pp7a pp7a pp7a pp7a pp7a pp7a ptx7 ptx7 ptx7 ptx7 ptx7 ptx7" minmax(18em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(4em, auto)
        "cncl cncl cncl cncl cncl cncl cncl cncl cncl cncl cncl cncl" minmax(8em, auto)
        " .    .    .    .    .    .    .    .    .    .    .    . "  minmax(4em, auto)
        "rfrn rfrn rfrn rfrn rfrn rfrn rfrn rfrn rfrn rfrn rfrn rfrn" minmax(12em, auto)

    
    }
}
